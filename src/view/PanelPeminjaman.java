/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import control.DAOBuku;
import control.DAOMember;
import control.DAOPinjaman;
import java.awt.HeadlessException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import model.Buku;
import model.Member;
import model.Pinjaman;
import static view.PanelMember.daomember;


public class PanelPeminjaman extends javax.swing.JPanel implements ListSelectionListener{

    /**
     * Creates new form PanelPeminjaman
     */
    Pinjaman oldpinjaman;
    Pinjaman newpinjaman;
    public static DAOPinjaman daopinjam;
    DefaultTableModel dtmpinjam;
    DAOBuku daobuku;
    DAOMember daomember;
    public PanelPeminjaman() {
        initComponents();
        daopinjam = new DAOPinjaman();
        //dtmBuku menampung model tabelBuku
        dtmpinjam = (DefaultTableModel) tabelPinjaman.getModel();
    }
    public void setDaoMember(DAOMember daomember) {
        this.daomember = daomember;
    }
    public void setDAOBuku(DAOBuku daobuku){
        this.daobuku = daobuku;
    }
    public static DAOPinjaman getDAOPeminjaman(){
        return daopinjam;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void reset(){
        InputIDPinjaman.setText("");
        inputtanggalbalik.setText("");
        inputtanggalpinjam.setText("");
        inputIDMember.setText("");
        inputISBNBuku.setText("");
        //search(daomember.getAllData(), inputIDMember.getText());

        tampilDataMahasiswaTOJTable();
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LabelFormPinjam = new javax.swing.JLabel();
        inputIDMember = new javax.swing.JTextField();
        labelIdentitas = new javax.swing.JLabel();
        labelIDPinjaman = new javax.swing.JLabel();
        InputIDPinjaman = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelPinjaman = new javax.swing.JTable();
        LabelTanggalKembali = new javax.swing.JLabel();
        inputtanggalpinjam = new javax.swing.JTextField();
        inputtanggalbalik = new javax.swing.JTextField();
        buttonPinjam = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        inputISBNBuku = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        LabelFormPinjam.setText("Form Peminjaman");

        labelIdentitas.setText("ID Member");

        labelIDPinjaman.setText("ID Pinjaman");

        jLabel1.setText("Tangal Pinjam");

        tabelPinjaman.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Member", "ID Pinjaman", "Tanggal Pinjaman", "Tanggal Kembali"
            }
        ));
        jScrollPane1.setViewportView(tabelPinjaman);

        LabelTanggalKembali.setText("Tanggal Kembali");

        buttonPinjam.setText("Pinjam");
        buttonPinjam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPinjamActionPerformed(evt);
            }
        });

        jLabel2.setText("ISBN Buku ");

        jButton1.setText("Reset");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Konfirmasi");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Klik \"KONFIRMASI\" sebelum \"PINJAM\"");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelFormPinjam)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelIDPinjaman)
                                    .addComponent(labelIdentitas)
                                    .addComponent(jLabel1)
                                    .addComponent(LabelTanggalKembali)
                                    .addComponent(jLabel2))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                                        .addComponent(buttonPinjam, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                                        .addComponent(InputIDPinjaman)
                                        .addComponent(inputIDMember)
                                        .addComponent(inputtanggalpinjam)
                                        .addComponent(inputtanggalbalik)
                                        .addComponent(inputISBNBuku))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 909, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(255, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(LabelFormPinjam)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelIdentitas)
                    .addComponent(inputIDMember, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelIDPinjaman)
                    .addComponent(InputIDPinjaman, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(inputtanggalpinjam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelTanggalKembali)
                    .addComponent(inputtanggalbalik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(inputISBNBuku, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonPinjam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(39, 39, 39)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(188, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonPinjamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPinjamActionPerformed
        //search(daomember.getAllData(), inputIDMember.getText());
        //search1(daobuku.getAllData(), inputISBNBuku.getText());
        try {
            if (InputIDPinjaman.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "ID Pinjaman is required!", "Warning Message", JOptionPane.WARNING_MESSAGE);
            } else if (inputIDMember.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "ID Member is required!", "Warning Message", JOptionPane.WARNING_MESSAGE);
            } else if (inputtanggalpinjam.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tanggal Pinjam is required!", "Warning Message", JOptionPane.WARNING_MESSAGE);
            } else if (inputtanggalbalik.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Tanggal Balik is required!", "Warning Message", JOptionPane.WARNING_MESSAGE);
            } else if (oldpinjaman == null) { //Create
                //pada tahap ini digunakan untuk menambah data buku
                //1. masukkan data buku dari form input ke newBuku
                //2. Jika daoBuku.insertData(newBuku) --> true maka tampilkan dialog berhasil
                //3. Jika daoBuku.insertData(newBuku) --> false maka tampilkan dialog data buku sudah ada
                newpinjaman = new Pinjaman();
                newpinjaman.setIDMember(inputIDMember.getText().trim());
                newpinjaman.setIDPinjam(InputIDPinjaman.getText().trim());
                newpinjaman.setTglbalik(inputtanggalbalik.getText().trim());
                newpinjaman.setTglpinjam(inputtanggalpinjam.getText().trim());
                newpinjaman.setISBN(inputISBNBuku.getText().trim());
                daopinjam.insertData(newpinjaman);
                reset();
            }
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Format Tahun Terbit salah!", "Warning Message", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_buttonPinjamActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        search(daomember.getAllData(), inputIDMember.getText());
        search1(daobuku.getAllData(), inputISBNBuku.getText());
    }//GEN-LAST:event_jButton2ActionPerformed
    public void search(List<Member>datamember,String x){
        for (Member member : datamember) {
            if(member.getId().equalsIgnoreCase(x)){
                JOptionPane.showMessageDialog(this,"Member ID Terkonfirmasi ditemukan ","Confirmation Message", JOptionPane.INFORMATION_MESSAGE);
            }
            if(!member.getId().equalsIgnoreCase(x)){
                JOptionPane.showMessageDialog(this,"Member ID tidak ditemukan Harap mengisi sesuai data","Confirmation Message", JOptionPane.INFORMATION_MESSAGE);
                reset();
            }
        }
    }
    public void search1(List<Buku>databuku,String x){
        for (Buku buku : databuku) {
            if(buku.getIsbn().equalsIgnoreCase(x)){
                 JOptionPane.showMessageDialog(this,"ISBN Buku Terkonfirmasi ditemukan ","Confirmation Message", JOptionPane.INFORMATION_MESSAGE);
            }
            if(!buku.getIsbn().equalsIgnoreCase(x)){
                JOptionPane.showMessageDialog(this,"ISBN Buku tidak ditemukan Harap mengisi sesuai data ","Confirmation Message", JOptionPane.INFORMATION_MESSAGE);
                reset();
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField InputIDPinjaman;
    private javax.swing.JLabel LabelFormPinjam;
    private javax.swing.JLabel LabelTanggalKembali;
    private javax.swing.JButton buttonPinjam;
    private javax.swing.JTextField inputIDMember;
    private javax.swing.JTextField inputISBNBuku;
    private javax.swing.JTextField inputtanggalbalik;
    private javax.swing.JTextField inputtanggalpinjam;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelIDPinjaman;
    private javax.swing.JLabel labelIdentitas;
    private javax.swing.JTable tabelPinjaman;
    // End of variables declaration//GEN-END:variables

    public void tampilDataMahasiswaTOJTable() {
        tabelPinjaman.getSelectionModel().removeListSelectionListener(this);
        dtmpinjam.getDataVector().removeAllElements();
        for (Pinjaman b : daopinjam.getAllData()) {
            dtmpinjam.addRow(new Object[]{
                b.getIDMember(),
                b.getIDPinjam(),
                b.getTglpinjam(),
                b.getTglbalik()
            });
        }
        tabelPinjaman.getSelectionModel().addListSelectionListener(this);
    }
    @Override
    public void valueChanged(ListSelectionEvent e) {
        if (e.getSource() == tabelPinjaman.getSelectionModel()) {
            oldpinjaman = daopinjam.getData(tabelPinjaman.getSelectedRow());
            inputIDMember.setText(oldpinjaman.getIDMember());
            InputIDPinjaman.setText(oldpinjaman.getIDPinjam());
            inputtanggalpinjam.setText(oldpinjaman.getTglpinjam());
            inputtanggalbalik.setText(oldpinjaman.getTglbalik());
            inputIDMember.setText(oldpinjaman.getISBN());
        }
    }
}
